1. Что такое тестирование?
2. Цель тестирования?
3. Почему вы решили стать тестировщиком?
4. Какие вы знаете виды тестовой документации?
5. Какие вы знаете техники-тест дизайна?
6. Что такое классы эквивалентности и граничные значения
7. Что такое таблица принятия решений
8. Какие бывают требования?
9. Опишите этапы тестирования?
10. Что такое чек-лист?
11. Что такое тест-кейс?
12. Чем чек-лист отличается от тест-кейса.
13. Что такое use-case?
14. Что такое тест-план?
15. Чем валидация отличается от верификации.
16. Что такое баг?
17. Обязательные и необязательные атрибуты баг-репорта.
18. Что такое severity и priority чем отличается?
19. Приведите пример бага с низкой серьезностью, но высоким приоритетом
20. Принципы тестирования вы знаете?
21. Какие виды тестирования вы знаете?
22. Функциональное и нефункциональное тестирование.
23. Позитивное и негативное тестирование.
24. Методы тестирования
25. Чем отличается смоук от регрессионного тестирования?
26. У вас открывается веб-сайт. Белый экран. Больше ничего. Как будете тестировать?
27. Как будете тестировать кнопку?
28. Как будете тестировать поле?
29. Протестируйте маску. 5 позитивных и 5 позитивных проверок.
30. Накидайте проверок на робот-пылесос. И позитивных и негативных
31. Вы тестировщик.К вам приходит заказчик с мобильным приложением. Сколько времени и какие доступы  вы попросите на тестирование?
32. Что такое санитарное тестирование?
33. Опишите что такое клиент-серверная архитектура?
34. Чем фронтенд отличается от бекенда
35. Что такое HTML
36. Что такое DNS?
37. Что такое CSS?
38. Что такое REST API
39. Отличия от SOAP
40. Что такое кэш и куки? Чем отличаются?
41. Что такое AJAX
42. Что такое CSS
43. Чем HTTP отличается от HTTP(s)
44. Из чего состоит HTTP запрос
45. Коды ответа HTTP
46. Что такое TCP-IP?
47. Чем TCP отличается от UDP?
48. Что такое ad-hoc тестирование?
49. Что такое исследовательное тесирование?
50. Что такое микросервисы?
51. Опишите модель OSI
52. Опишите жизненный цикл ПО и вклад тестировщика на каждом этапе цикла
53. Когда стоит начинать тестирование?
54. Как проверить доступность web-ресурса?
55. Какие вы знаете методы управления проектами?
56. Что такое Scrum, Agile, Waterfall?
57. Какими инструментами тестировщика вы владеете?
58. Опишите особенности тестирования мобильных приложений
59. Чем отличаются нативные, гибридные, веб приложения.
60. Что нельзя протестировать на эмуляторе, а только на реальном устройстве.
61. Какие бывают прерывания?
62. Что такое кросс-браузерное тестирование.
63. Что можно протестировать через DevTools?
64. Что такое сниффер и зачем он нужен?
65. Какие вы знаете HTTP-запросы?
66. Чем GET отличается от POST?
67. Опишите жизненный цикл бага.
68. Зачем нужно чистить кэш перед тестированием веб-приложений?
69. Опишите фазы тестирования?
70. Что такое JSON/XML?
